{
    "collab_server" : "",
    "contents" : "library(lme4)\nlibrary(dplyr)\nlibrary(lmvar)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(gridExtra)\nsetwd('/Users/tae/Dropbox/TaeProject/CopyNumber/CopyNumberCellShift')\nRcpp::sourceCpp('src/all_functions.cpp')\n\n\nj =  22 #chromosome ID\nload(\"../summary.100kb.normalized.RData\")\nX = data.100kb[data.100kb[, 1]%in%paste0(\"chr\", j), -c(1:3)]\nY = as.matrix(apply(X, 2, as.numeric))\nwts = defaultWeights_c(nrow(Y))\nsteps = ncol(Y)-1\n\nres = cnv_c(Y, wts, steps, 30)\nres_old = cnv_c_old(Y,wts,steps,30)\n\nplot(res$aic$xi[1,], ylim=c(-1,1),\n     ylab='xi',\n     xlab='samples')\npoints(c(3,5,12,27), res$aic$xi[1,c(3,5,12,27)],\n       col='red')\n\n###########comparing error\nind = 1:32\naicdat = data.frame(x = ind, aic_after = res$aicerror[ind], aic_before=res_old$aicerror[ind])\naicdat2 = melt(aicdat, id.vars='x')\naicplot = ggplot(aicdat2, aes(x=x, y=value, col=variable))+\n  geom_line() + ggtitle('aic')+theme(legend.position=\"none\") + labs(x='changepoints',y='aic')\n\nbicdat = data.frame(x = ind, bic_after = res$bicerror[ind], bic_before=res_old$bicerror[ind])\nbicdat2 = melt(bicdat, id.vars='x')\nbicplot = ggplot(bicdat2, aes(x=x, y=value, col=variable, guide=FALSE))+\n  geom_line() + ggtitle('bic') + theme(legend.position=\"none\")+ labs(x='changepoints',y='bic')\n\nrssdat = data.frame(x=ind, after = res$rss[ind], before = res_old$rss[ind])\nrssdat2 = melt(rssdat, id.vars='x')\nrssplot = ggplot(rssdat2, aes(x=x, y=value, col=variable))+\n  geom_line() + ggtitle('rss')+ theme(legend.position=\"none\")+ labs(x='changepoints',y='rss')\n\ngrid.arrange(aicplot, bicplot, rssplot, ncol=3)\n\n\n#thetaphi\nresiduals = data.frame(x=1:nrow(Y),\n                       withxi=(res$aic$theta[,1]) * res$aic$phi,\n                     withoutxi=res_old$aic$theta[,1]*res_old$aic$phi\n\n)\nfor (i in 2:32){\n  residuals = rbind(residuals, data.frame(x=1:nrow(Y),\n                                          withxi=(res$aic$theta[,i]) * res$aic$phi,\n                      withoutxi=res_old$aic$theta[,i]*res_old$aic$phi\n\n  ))\n}\nresid = melt(residuals, id.vars='x')\nresid$sample = rep(1:32, each=nrow(Y))\npicksample = c(1:4, 29:32)\npick_resid = resid[resid$sample%in% (picksample), ]\nggplot(pick_resid, aes(x=x, y=value, col=variable))+\n  geom_line(alpha = 0.7)+\n  facet_wrap(~sample, nrow=4)+\n  ylim(-5,5)+\n  ylab(expression(Theta*phi))+\n  xlab(\"probes\")\n\n#zoom in to one sample\n#normal\npicksample=3\npick_resid = resid[resid$sample%in% (picksample), ]\nplot_1=ggplot(pick_resid, aes(x=x, y=value, col=variable))+\n  geom_point(alpha = 0.3)+ylim(-4,4)+ggtitle(\"sample3\")\n\n#abnormal\npicksample=30\npick_resid = resid[resid$sample%in% (picksample), ]\nplot_25=ggplot(pick_resid, aes(x=x, y=value, col=variable))+\n  geom_point(alpha = 0.3)+ylim(-4,4)+ggtitle(\"sample30\")\n\ngrid.arrange(plot_1, plot_25)\n\n\n####Y-xiphi\nnewmat = Y-res$aic$phi %*% res$aic$xi\nnewmat2 = melt(newmat)\nnewmat2$Var2 = as.factor(rep(1:32, each=nrow(Y)))\npicksample = c(3, 30)\npicked_newmat = newmat2[newmat2$Var2 %in% (picksample), ]\nyminusxiphi=ggplot(picked_newmat, aes(x=Var1, y=value, col=Var2))+\n  geom_point(alpha = 0.9, size=0.5)+\n  ylim(-5,5)+\n  ggtitle(expression(Y[ij]~-~xi[j]*phi[i]~\"for j=3 and 30\"))+\n  xlab(\"probes\")\n\nnewmat3 = melt(Y-newmat)\nnewmat3$Var2 = as.factor(rep(1:32, each=nrow(Y)))\npicksample=c(3, 30)\npicked_newmat = newmat3[newmat3$Var2 %in% (picksample), ]\nxiphi=ggplot(picked_newmat, aes(x=Var1, y=value, col=Var2))+\n  geom_point(alpha = 0.9, size=0.5)+\n  ylim(-5,5)+\n  ggtitle(expression(xi[j]*phi[i]~\"for j= 3 and 30\"))+\n  xlab(\"probes\")\n\ngrid.arrange(yminusxiphi, xiphi)\n\n####show thetaphi and xiphi side by side######\nbigper = data.frame(x=1:nrow(Y), y=res$aic$phi * res$aic$xi[1])\nfor (i in 2:32){\n  perturbed = data.frame(x=1:nrow(Y), y=res$aic$phi * res$aic$xi[i])\n  bigper = rbind(bigper, perturbed)\n}\nbigper2 = melt(bigper, id.vars='x')\nbigper2$sample = as.factor(rep(1:32, each=nrow(Y)))\ntemp = bigper2[bigper2$sample%in%(c(1,3,30,31)),]\nxiphi =ggplot(temp, aes(x=x, y=value, col=variable))+\n  geom_point()+\n  facet_wrap(~sample, nrow=4)+\n  theme(legend.position=\"none\")+\n  ggtitle(expression(theta[ij]*phi[i])) +\n  ylim(-6,6)\n\n\nbigper = data.frame(x=1:nrow(Y), y=res$aic$theta[,1]*res$aic$phi)\nfor (i in 2:32){\n  perturbed = data.frame(x=1:nrow(Y), y=res$aic$theta[,i]*res$aic$phi)\n  bigper = rbind(bigper, perturbed)\n}\nbigper2 = melt(bigper, id.vars='x')\nbigper2$sample = as.factor(rep(1:32, each=nrow(Y)))\ntemp2 = bigper2[bigper2$sample%in%(c(1,3,30,31)),]\nthetaphi =ggplot(temp2, aes(x=x,y=value))+\n  geom_point()+\n  facet_wrap(~sample, nrow=4)+\n  ggtitle(expression(xi[j]*phi[i]))+\n  theme(legend.position=\"none\")+\n  ylim(-6,6)\n\ngrid.arrange(thetaphi, xiphi, ncol=2)\n\n\n\n\n#compare theta alone\ni=1\nonlytheta = data.frame(x = 1:nrow(Y), thetaplusxi = res$aic$theta[,i]+res$aic$xi[i],\n                       theta=res$aic$theta[,i],\n                       oldtheta=res_old$aic$theta[,i])\nonlytheta2=melt(onlytheta,id.vars='x')\nonlytheta2$sample = i\nfinal=onlytheta2\nfor (i in 2:32){\n  onlytheta = data.frame(x = 1:nrow(Y), thetaplusxi = res$aic$theta[,i]+res$aic$xi[i],\n                         theta=res$aic$theta[,i],\n                         oldtheta=res_old$aic$theta[,i])\n  onlytheta2=melt(onlytheta,id.vars='x')\n  onlytheta2$sample = i\n  final=rbind(final,onlytheta2)\n}\nsamplepick=c(1:4, 29:32)\nggplot(final[final$sample%in%(samplepick),], aes(x=x, y=value,col=variable))+\n  geom_line(size=1, alpha=0.5)+\n  facet_wrap(~sample,nrow=4)\n\n\nget_intra_cluster_var = function(cluster){\n  diffmat_new = matrix(0, length(cluster), length(cluster))\n  diffmat_old = matrix(0, length(cluster), length(cluster))\n  for (i in cluster[1:(length(cluster)-1)]){\n    for (j in (i+1):cluster[length(cluster)]){\n      vec1 = res$aic$theta[,i]\n      vec2 = res$aic$theta[,j]\n      diffmat_new[i,j] = diffmat_new[j,i] = sum((vec1-vec2)^2)\n\n      vec1 = res_old$aic$theta[,i]\n      vec2 = res_old$aic$theta[,j]\n      diffmat_old[i,j] = diffmat_old[j,i] = sum((vec1-vec2)^2)\n    }\n  }\n  return(list(\n    new = sum(diffmat_new)/(length(cluster)*(length(cluster)-1)),\n         old = sum(diffmat_old)/(length(cluster)*(length(cluster)-1))))\n}\nget_intra_cluster_var(cluster2)\n\n\n\n\n\n\n#Run R functions separately - simdata2\nli = simdata2(382, 32)\nY = as.matrix(li$Y)\nfor (j in 1:32){\n  plot((li$theta[,j] + li$xi[j])*li$phi, ylim = c(-6,6))\n  points((res$aic$theta[,j] + res$aic$xi[j]) * res$aic$phi, col='red')\n  Sys.sleep(0.5)\n}\nplot(li$theta[,1])\npoints(res$aic$theta[,1], col = 'red')\n\nplot(li$phi, type = 'l')\nlines(-res$aic$phi, col = 'red')\n\nplot(li$xi, type = 'l')\nlines(res$aic$xi[1,], col = 'red')\n",
    "created" : 1507433916138.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "225958812",
    "id" : "5218A09D",
    "lastKnownWriteTime" : 1507434173,
    "last_content_update" : 1507434173342,
    "path" : "~/Dropbox/TaeProject/CopyNumber/CopyNumberCellShift/test.R",
    "project_path" : "test.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}