// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// multiplyXtXBySparse_c
arma::mat multiplyXtXBySparse_c(int n, arma::uvec ind, arma::mat val, arma::vec phi, arma::vec w);
RcppExport SEXP _cnvJoint_multiplyXtXBySparse_c(SEXP nSEXP, SEXP indSEXP, SEXP valSEXP, SEXP phiSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type ind(indSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type val(valSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(multiplyXtXBySparse_c(n, ind, val, phi, w));
    return rcpp_result_gen;
END_RCPP
}
// leftMultiplyByXt_c
arma::mat leftMultiplyByXt_c(arma::mat Y, arma::vec phi, arma::vec w);
RcppExport SEXP _cnvJoint_leftMultiplyByXt_c(SEXP YSEXP, SEXP phiSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(leftMultiplyByXt_c(Y, phi, w));
    return rcpp_result_gen;
END_RCPP
}
// leftMultiplyByInvXAtXA_c
arma::mat leftMultiplyByInvXAtXA_c(double n, arma::uvec ind, arma::mat val, arma::vec phi, arma::vec w);
RcppExport SEXP _cnvJoint_leftMultiplyByInvXAtXA_c(SEXP nSEXP, SEXP indSEXP, SEXP valSEXP, SEXP phiSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type ind(indSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type val(valSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(leftMultiplyByInvXAtXA_c(n, ind, val, phi, w));
    return rcpp_result_gen;
END_RCPP
}
// ic_c
arma::vec ic_c(int k, arma::mat Y, arma::vec phi, arma::mat theta, int p, int n);
RcppExport SEXP _cnvJoint_ic_c(SEXP kSEXP, SEXP YSEXP, SEXP phiSEXP, SEXP thetaSEXP, SEXP pSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(ic_c(k, Y, phi, theta, p, n));
    return rcpp_result_gen;
END_RCPP
}
// defaultWeights_c
arma::vec defaultWeights_c(int p);
RcppExport SEXP _cnvJoint_defaultWeights_c(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(defaultWeights_c(p));
    return rcpp_result_gen;
END_RCPP
}
// doLars_c
Rcpp::List doLars_c(arma::mat Y, int K, arma::vec phi, arma::vec wts, int p, int n, double epsilon);
RcppExport SEXP _cnvJoint_doLars_c(SEXP YSEXP, SEXP KSEXP, SEXP phiSEXP, SEXP wtsSEXP, SEXP pSEXP, SEXP nSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type wts(wtsSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(doLars_c(Y, K, phi, wts, p, n, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// cnv_c
Rcpp::List cnv_c(arma::mat Y, arma::vec tau1, arma::vec wts, int steps, int maxloop);
RcppExport SEXP _cnvJoint_cnv_c(SEXP YSEXP, SEXP tau1SEXP, SEXP wtsSEXP, SEXP stepsSEXP, SEXP maxloopSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type wts(wtsSEXP);
    Rcpp::traits::input_parameter< int >::type steps(stepsSEXP);
    Rcpp::traits::input_parameter< int >::type maxloop(maxloopSEXP);
    rcpp_result_gen = Rcpp::wrap(cnv_c(Y, tau1, wts, steps, maxloop));
    return rcpp_result_gen;
END_RCPP
}
// get_f
double get_f(arma::mat Y, arma::vec sigma, arma::vec delta);
RcppExport SEXP _cnvJoint_get_f(SEXP YSEXP, SEXP sigmaSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(get_f(Y, sigma, delta));
    return rcpp_result_gen;
END_RCPP
}
// get_g
arma::vec get_g(arma::mat Y, arma::vec sigma, arma::vec delta2);
RcppExport SEXP _cnvJoint_get_g(SEXP YSEXP, SEXP sigmaSEXP, SEXP delta2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta2(delta2SEXP);
    rcpp_result_gen = Rcpp::wrap(get_g(Y, sigma, delta2));
    return rcpp_result_gen;
END_RCPP
}
// get_f_and_g
Rcpp::List get_f_and_g(arma::vec sigma, arma::vec delta, arma::mat Y);
RcppExport SEXP _cnvJoint_get_f_and_g(SEXP sigmaSEXP, SEXP deltaSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(get_f_and_g(sigma, delta, Y));
    return rcpp_result_gen;
END_RCPP
}
// get_alpha
double get_alpha(arma::mat Y, double alpha, double rho, double c, arma::vec sigma, arma::vec delta);
RcppExport SEXP _cnvJoint_get_alpha(SEXP YSEXP, SEXP alphaSEXP, SEXP rhoSEXP, SEXP cSEXP, SEXP sigmaSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(get_alpha(Y, alpha, rho, c, sigma, delta));
    return rcpp_result_gen;
END_RCPP
}
// grdesc
Rcpp::List grdesc(arma::mat Y, arma::vec sig, arma::vec del, int maxit);
RcppExport SEXP _cnvJoint_grdesc(SEXP YSEXP, SEXP sigSEXP, SEXP delSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type del(delSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(grdesc(Y, sig, del, maxit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cnvJoint_multiplyXtXBySparse_c", (DL_FUNC) &_cnvJoint_multiplyXtXBySparse_c, 5},
    {"_cnvJoint_leftMultiplyByXt_c", (DL_FUNC) &_cnvJoint_leftMultiplyByXt_c, 3},
    {"_cnvJoint_leftMultiplyByInvXAtXA_c", (DL_FUNC) &_cnvJoint_leftMultiplyByInvXAtXA_c, 5},
    {"_cnvJoint_ic_c", (DL_FUNC) &_cnvJoint_ic_c, 6},
    {"_cnvJoint_defaultWeights_c", (DL_FUNC) &_cnvJoint_defaultWeights_c, 1},
    {"_cnvJoint_doLars_c", (DL_FUNC) &_cnvJoint_doLars_c, 7},
    {"_cnvJoint_cnv_c", (DL_FUNC) &_cnvJoint_cnv_c, 5},
    {"_cnvJoint_get_f", (DL_FUNC) &_cnvJoint_get_f, 3},
    {"_cnvJoint_get_g", (DL_FUNC) &_cnvJoint_get_g, 3},
    {"_cnvJoint_get_f_and_g", (DL_FUNC) &_cnvJoint_get_f_and_g, 3},
    {"_cnvJoint_get_alpha", (DL_FUNC) &_cnvJoint_get_alpha, 6},
    {"_cnvJoint_grdesc", (DL_FUNC) &_cnvJoint_grdesc, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_cnvJoint(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
