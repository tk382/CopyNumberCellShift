denscol="black",
key.title = NA,
keysize=1)
gink = read.table('../Seb_processed_ginkgo/SegFixed.txt', header = TRUE)
gink = gink[gink$CHR=='chr22', ]
colnames(gink)[-(1:3)] = colnames(Y)
gink2 = as.matrix(gink[,-(1:3)])
gink2 = gink2 * 2
gink2 = log(gink2/2+0.01)
gink2 = gink2 + 0.01
heatmap.2(as.matrix(gink2),
Colv = FALSE,
Rowv = FALSE,
col= my_palette,
dendrogram = "none",
main= 'Ginkgo Result',
tracecol = NA,
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=1)
?heatmap.2
heatmap.2(Y,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'Raw Data',
tracecol = NA,
labRow=FALSE,
col=my_palette,
breaks=seq(-8,8,length.out=101),
denscol="black",
key.title = NA,
keysize = 1
)
heatmap.2(Y,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'Raw Data',
tracecol = NA,
labRow=FALSE,
col=my_palette,
breaks=seq(-8,8,length.out=500),
denscol="black",
key.title = NA,
keysize = 1
)
heatmap.2(Y,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'Raw Data',
tracecol = NA,
labRow=FALSE,
col=my_palette,
breaks=seq(-8,8,length.out=300),
denscol="black",
key.title = NA,
keysize = 1
)
heatmap.2(res$bic$theta,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'New Result',
col = my_palette,
breaks=seq(-8,8,length.out=300),
tracecol = NA,
labRow=FALSE,
denscol="black",
key.title = NA,
keysize = 1
)
heatmap.2(res_mba$bic$theta,
Colv = FALSE,
Rowv = FALSE,
dendrogram = "none",
main= 'Old Result',
tracecol = NA,
col = my_palette,
breaks=seq(-8,8,length.out=300),
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=1)
heatmap.2(as.matrix(gink2),
Colv = FALSE,
Rowv = FALSE,
col= my_palette,
breaks=seq(-8,8,length.out=300),
dendrogram = "none",
main= 'Ginkgo Result',
tracecol = NA,
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=1)
heatmap.2(as.matrix(gink2),
Colv = FALSE,
Rowv = FALSE,
col= my_palette,
breaks=seq(-8,8,length.out=300),
dendrogram = "none",
main= 'Ginkgo Result',
tracecol = NA,
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=3)
heatmap.2(res_mba$bic$theta,
Colv = FALSE,
Rowv = FALSE,
dendrogram = "none",
main= 'Old Result',
tracecol = NA,
col = my_palette,
breaks=seq(-8,8,length.out=300),
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=2)
heatmap.2(as.matrix(gink2),
Colv = FALSE,
Rowv = FALSE,
col= my_palette,
breaks=seq(-8,8,length.out=300),
dendrogram = "none",
main= 'Ginkgo Result',
tracecol = NA,
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=2)
heatmap.2(res$bic$theta,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'New Result',
col = my_palette,
breaks=seq(-8,8,length.out=300),
tracecol = NA,
labRow=FALSE,
denscol="black",
key.title = NA,
keysize = 1
)
heatmap.2(Y,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'Raw Data',
tracecol = NA,
labRow=FALSE,
col=my_palette,
breaks=seq(-8,8,length.out=300),
denscol="black",
key.title = NA,
keysize = 1
)
heatmap.2(Y,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'Raw Data',
tracecol = NA,
labRow=FALSE,
col=my_palette,
breaks=seq(-8,8,length.out=300),
denscol="black",
key.title = NA,
keysize = 2
)
heatmap.2(res$bic$theta,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'New Result',
col = my_palette,
breaks=seq(-8,8,length.out=300),
tracecol = NA,
labRow=FALSE,
denscol="black",
key.title = NA,
keysize = 1
)
heatmap.2(res$bic$theta,
Colv=FALSE,
Rowv=FALSE,
dendrogram = "none",
main = 'New Result',
col = my_palette,
breaks=seq(-8,8,length.out=300),
tracecol = NA,
labRow=FALSE,
denscol="black",
key.title = NA,
keysize = 2
)
heatmap.2(res_mba$bic$theta,
Colv = FALSE,
Rowv = FALSE,
dendrogram = "none",
main= 'Old Result',
tracecol = NA,
col = my_palette,
breaks=seq(-8,8,length.out=300),
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=2)
heatmap.2(as.matrix(gink2),
Colv = FALSE,
Rowv = FALSE,
col= my_palette,
breaks=seq(-8,8,length.out=300),
dendrogram = "none",
main= 'Ginkgo Result',
tracecol = NA,
labRow = FALSE,
denscol="black",
key.title = NA,
keysize=2)
#####load packages and functions#####
library(lme4)
library(dplyr)
library(lmvar)
library(ggplot2)
library(reshape2)
library(gridExtra)
#library(CopyNumberCellShift)
setwd('/Users/tae/Dropbox/TaeProject/CopyNumber/CopyNumberCellShift')
Rcpp::sourceCpp('src/all_functions.cpp')
#####set Y ######
j =  22 #chromosome ID
load("../summary.100kb.normalized.RData")
X = data.100kb[data.100kb[, 1]%in%paste0("chr", j), -c(1:3)]
Y = as.matrix(apply(X, 2, as.numeric))
wts = as.numeric(defaultWeights_c(nrow(Y)))
steps = min(nrow(Y),ncol(Y))-1
res = cnv_c(as.matrix(Y), wts, steps, 30)
thetalist = res$thetalist
dim(thetalist)
i=15
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq)
plot(sumsq[-4])
plot(sumsq[-c(4,11)])
plot(sumsq[-c(4,10)])
plot(sumsq[-c(4,12)])
sumsq = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
plot(colMeans(theta1-theta2))
sumsq[i-1] = sum((theta1-theta2)^2)
}
sumsq = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
plot(colMeans(theta1-theta2), ylim = c(-0.2, 0.2))
Sys.sleep(0.5)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(theta1[,29])
plot(theta2[,29])
plot(theta2[,1])
plot(theta1[,1])
plot(thetalist[,1,15])
plot(thetalist[,1,16])
plot(thetalist[,1,17])
plot(thetalist[,1,18])
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
sumsq1 = sumsq2 = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq2)
plot(theta[,1,4])
plot(thetalist[,1,4])
plot(thetalist[,1,3])
plot(thetalist[,1,4])
plot(thetalist[,1,5])
plot(thetalist[,1,3])
plot(sumsq)
plot(sumsq2)
Rcpp::sourceCpp('src/cnvJoint.cpp')
res = cnvJoint(Y = as.matrix(Y), wts = wts, steps = steps, maxloop = 30, verbose=TRUE)
thetalist = res$thetalist
sumsq1 = sumsq2 = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq2)
plot(sumsq)
res$xilist[,i]
resid = Y-res$thetalist[,,i]*res$philist[,i] - t(res$xilist[,i])%*%res$philist[,i]
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$xilist[,i]%*%t(res$philist[,i])
i
i=15
res$xilist[,i]%*%t(res$philist[,i])
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[,i])
res$philist[,i]%*%t(res$xilist[,i])
dim(res$philist[,i]%*%t(res$xilist[,i]))
dim(res$thetalist[,,i]*res$philist[,i])
dim(res$xilist)
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[i,])
dim(resid)
boxplot(as.numeric(resid))
boxplot(as.numeric(resid), ylim = c(-10,10))
for (i in 1:30){
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[i,])
boxplot(as.numeric(resid), ylim = c(-10,10))
}
for (i in 1:30){
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[i,])
boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
Sys.sleep(0.5)
}
for (i in 1:30){
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
hist(as.numeric(resid), xlim = c(-9,9),main=i)
Sys.sleep(0.5)
}
errorsq = rep(1,30)
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)
#Sys.sleep(0.5)
}
errorsq
plot(errorsq)
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)/(nrow(resid)*ncol(resid))
#Sys.sleep(0.5)
}
plot(errors)
plot(errorsq)
res$aic$bkp
res$bic$bkp
sumsq1 = sumsq2 = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq2)
plot(sumsq)
abline(v=9)
res22 = res
j =  21 #chromosome ID
load("../summary.100kb.normalized.RData")
X = data.100kb[data.100kb[, 1]%in%paste0("chr", j), -c(1:3)]
Y = as.matrix(apply(X, 2, as.numeric))
wts = as.numeric(defaultWeights_c(nrow(Y)))
steps = min(nrow(Y),ncol(Y))-1
res = cnvJoint(Y = as.matrix(Y), wts = wts, steps = steps, maxloop = 30, verbose=TRUE)
res21 = res
res = paste0(res, 'chr')
chr=22
res = paste0("res", chr)
res
parse(res)
parse(res)
eval(parse(res))
eval(call("<-", as.name(res), value))
res = call("<-", paste0('res',chr))
summary(res)
thetalist = res21$thetalist
sumsq1 = sumsq2 = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq2)
plot(sumsq1)
plot(sumsq)
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-res$thetalist[,,i]*res$philist[,i] - res$philist[,i]%*%t(res$xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)/(nrow(resid)*ncol(resid))
#Sys.sleep(0.5)
}
res$xilist[1,]
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-thetalist[,,i]*philist[,i] - philist[,i]%*%t(xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)/(nrow(resid)*ncol(resid))
#Sys.sleep(0.5)
}
thetalist = res21$thetalist
philist   = res21$philist
xilist    = res21$xilist
sumsq1 = sumsq2 = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq2)
plot(sumsq)
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-thetalist[,,i]*philist[,i] - philist[,i]%*%t(xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)/(nrow(resid)*ncol(resid))
#Sys.sleep(0.5)
}
plot(errorsq)
res21$aic$bkp
res$bic$bkp
res21$bic$bkp
diff(errorsq)
plot(diff(errorsq))
plot(abs(diff(errorsq)))
abline(h=0.01)
thetalist = res22$thetalist
philist   = res22$philist
xilist    = res22$xilist
sumsq1 = sumsq2 = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq2)
plot(sumsq)
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-thetalist[,,i]*philist[,i] - philist[,i]%*%t(xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)/(nrow(resid)*ncol(resid))
#Sys.sleep(0.5)
}
plot(errorsq)
j =  22 #chromosome ID
load("../summary.100kb.normalized.RData")
X = data.100kb[data.100kb[, 1]%in%paste0("chr", j), -c(1:3)]
Y = as.matrix(apply(X, 2, as.numeric))
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-thetalist[,,i]*philist[,i] - philist[,i]%*%t(xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)/(nrow(resid)*ncol(resid))
#Sys.sleep(0.5)
}
plot(errorsq)
abline(h=0.01)
j =  21 #chromosome ID
load("../summary.100kb.normalized.RData")
X = data.100kb[data.100kb[, 1]%in%paste0("chr", j), -c(1:3)]
Y = as.matrix(apply(X, 2, as.numeric))
thetalist = res21$thetalist
philist   = res21$philist
xilist    = res21$xilist
sumsq1 = sumsq2 = rep(0,29)
for (i in 2:30){
theta1 = thetalist[,,i-1]
theta2 = thetalist[,,i]
sumsq2[i-1] = sum((colMeans(theta1)-colMeans(theta2))^2)
sumsq[i-1] = sum((theta1-theta2)^2)
}
plot(sumsq2)
plot(sumsq)
errorsq = rep(1,30)
for (i in 1:30){
resid = Y-thetalist[,,i]*philist[,i] - philist[,i]%*%t(xilist[i,])
#boxplot(as.numeric(resid), ylim = c(-10,10), main = i)
#hist(as.numeric(resid), xlim = c(-9,9),main=i)
errorsq[i] = sum(as.numeric(resid)^2)/(nrow(resid)*ncol(resid))
#Sys.sleep(0.5)
}
plot(errorsq)
